<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Installation on Kairos</title>
    <link>https://kairos.io/docs/installation/</link>
    <description>Recent content in Installation on Kairos</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://kairos.io/docs/installation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Check the Signatures</title>
      <link>https://kairos.io/docs/installation/check-the-signatures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/check-the-signatures/</guid>
      <description>&lt;h2 id=&#34;check-the-signatures&#34;&gt;Check the Signatures&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Optional Step&lt;/h4&gt;&#xA;&#xA;    This is an optional but strongly encouraged step for security reasons.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Our ISO releases have sha256 files to checksum the validity of the artifacts. At the same time, our sha256 files are signed automatically in the CI during the release workflow to verify that they haven&amp;rsquo;t been tampered with, adding an extra step to the supply chain.&lt;/p&gt;&#xA;&lt;p&gt;It is recommended that before starting any installation the whole security chain is validated by verifying our sha256 signature and validating that the checksum matches with the download artifacts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installation on AWS</title>
      <link>https://kairos.io/docs/installation/aws/</link>
      <pubDate>Mon, 27 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/aws/</guid>
      <description>&lt;p&gt;This page describes how to install Kairos on AWS after you have created an AMI. Since release v3.3.0, Kairos pipeline is pushing a public AMI image to AWS which you can use.&#xA;If you want to build a custom image, you can follow the instructions in the &lt;a href=&#34;https://kairos.io/docs/advanced/build/&#34;&gt;Build Kairos appliances&lt;/a&gt; page.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;An AWS account with permissions to create EC2 instances.&lt;/li&gt;&#xA;&lt;li&gt;An AMI image of Kairos. You can use the public AMI image provided by Kairos or build your own image.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;find-the-ami&#34;&gt;Find the AMI&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Login to your AWS account.&lt;/li&gt;&#xA;&lt;li&gt;Go to the EC2 dashboard -&amp;gt; Images -&amp;gt; AMIs.&lt;/li&gt;&#xA;&lt;li&gt;If you are looking for the Kairos AMI, make sure you are searching among &amp;ldquo;Public images&amp;rdquo;. Then search for &amp;ldquo;kairos&amp;rdquo;&#xA;in the search bar.&lt;/li&gt;&#xA;&lt;li&gt;If you are looking for an AMI you created, make sure you are searching among &amp;ldquo;Owned by me&amp;rdquo;. Then search for your AMI.&lt;/li&gt;&#xA;&lt;li&gt;Select the AMI you want to use (e.g. &lt;code&gt;kairos-ubuntu-24.04-standard-amd64-generic-v3.3.0-k3sv1.32.0-k3s1.raw&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;li&gt;From the top menu, click on &lt;code&gt;Launch instance from AMI&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;verify-the-ami&#34;&gt;Verify the AMI&lt;/h2&gt;&#xA;&lt;p&gt;To ensure you&amp;rsquo;re using a genuine Kairos AMI, check the AMI owner ID. The AMI should be owned by the Kairos team&amp;rsquo;s AWS account. You can find this information in the AMI details.  Look for the Owner Account ID. It should be &lt;code&gt;171987620676&lt;/code&gt; (The Kairos account ID).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Interactive</title>
      <link>https://kairos.io/docs/installation/interactive/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/interactive/</guid>
      <description>&lt;p&gt;The interactive installation can be accessed from the LiveCD ISO and guides the user into the installation process.&lt;/p&gt;&#xA;&lt;p&gt;It generates a configuration file, which is later accessible after installation in the &lt;code&gt;/oem/90_custom.yaml&lt;/code&gt; file.&lt;/p&gt;&#xA;&lt;h2 id=&#34;from-the-boot-menu&#34;&gt;From the boot menu&lt;/h2&gt;&#xA;&lt;p&gt;When loading any Kairos ISOs, a GRUB menu, like the following will be displayed. To access the interactive installation, select the third entry (&lt;code&gt;kairos (interactive install)&lt;/code&gt;).&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2420543/189219819-6b16d13d-c409-4b9b-889b-12792f800a08.gif&#34; alt=&#34;interactive&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;manually&#34;&gt;Manually&lt;/h2&gt;&#xA;&lt;p&gt;The interactive installer can be also started manually with &lt;code&gt;kairos-agent interactive-install&lt;/code&gt; from the LiveCD.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Manual installation</title>
      <link>https://kairos.io/docs/installation/manual/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/manual/</guid>
      <description>&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;&#xA;&#xA;    After the installation, the password login is disabled, users, and SSH keys to log in must be configured via cloud-init.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;cloud-configuration&#34;&gt;Cloud Configuration&lt;/h2&gt;&#xA;&lt;p&gt;Kairos uses yip a subset of cloud-init to configure a node. Here&amp;rsquo;s a simple example:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;#cloud-config&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Define the user accounts on the node.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;kairos&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                       &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# The username for the user.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;passwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;kairos&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# The password for the user.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ssh_authorized_keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# A list of SSH keys to add to the user&amp;#39;s authorized keys.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;github:mudler                      &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# A key from the user&amp;#39;s GitHub account.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;ssh-rsa AAA...&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# A raw SSH key.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Enable K3s on the node.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;k3s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                         &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Set to true to enable K3s.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What do these settings do?&lt;/p&gt;</description>
    </item>
    <item>
      <title>QR Code</title>
      <link>https://kairos.io/docs/installation/qrcode/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/qrcode/</guid>
      <description>&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;&#xA;&#xA;    You will need a Standard Kairos OS image in order to use QR Code feature.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;By default Kairos will display a QR code after booting the ISO to install the machine:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2420543/189219806-29b4deed-b4a1-4704-b558-7a60ae31caf2.gif&#34; alt=&#34;livecd&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The QR Code is a base64 encoded string which is an &lt;a href=&#34;https://github.com/mudler/edgevpn&#34;&gt;&lt;code&gt;edgevpn&lt;/code&gt;&lt;/a&gt; token.&#xA;For example, you can scan the following QR Code from the video &lt;a href=&#34;https://youtu.be/WzKf6WrL3nE?t=256&#34;&gt;Introduction to Kairos - timestamp 4:16&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The base64 encoded string from the QR Code looks like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>WebUI</title>
      <link>https://kairos.io/docs/installation/webui/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/webui/</guid>
      <description>&lt;p&gt;By default when running the LiveCD, or during installation, Kairos will start a WebUI in the background, listening by default on the &lt;code&gt;8080&lt;/code&gt; port:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2420543/214573939-31f887b8-890c-4cce-a02a-0100198ea7d9.png&#34; alt=&#34;WebUI&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The WebUI has an input form that accepts the &lt;code&gt;YAML&lt;/code&gt; config file, features a syntax highlighter and a &lt;code&gt;YAML&lt;/code&gt; syntax checker. You can find a &lt;a href=&#34;https://kairos.io/docs/reference/configuration/&#34;&gt;full example in our documentation&lt;/a&gt; or navigate to our &lt;a href=&#34;https://kairos.io/docs/examples/&#34;&gt;examples section&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installation on Microsoft Azure</title>
      <link>https://kairos.io/docs/installation/azure/</link>
      <pubDate>Mon, 24 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/azure/</guid>
      <description>&lt;p&gt;This page describes how to install Kairos on &lt;a href=&#34;https://azure.microsoft.com/&#34;&gt;Microsoft Azure&lt;/a&gt; after you have created a disk image. Since release v3.3.5, Kairos pipeline is pushing a public OS image to Azure which you can use.&#xA;If you want to build a custom image, you can follow the instructions in the &lt;a href=&#34;https://kairos.io/docs/advanced/creating_custom_cloud_images/&#34;&gt;Creating Custom Cloud Images&lt;/a&gt; page.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;An Azure account with permissions to create VMs.&lt;/li&gt;&#xA;&lt;li&gt;An Azure compatible image of Kairos. You can use the public image provided by Kairos (see below) or &lt;a href=&#34;https://kairos.io/docs/reference/auroraboot/#generate-raw-disk-images&#34;&gt;build your own image&lt;/a&gt; (for Azure, that would be the &lt;code&gt;.vhd&lt;/code&gt; format) and upload it to your Azure resource group (&lt;a href=&#34;https://github.com/kairos-io/kairos/blob/cbc6e033cda624e61b2050439b1a95c04fbe78de/.github/workflows/upload-cloud-images.yaml#L158-L241&#34;&gt;check how the Kairos CI does it&lt;/a&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;deploy-a-vm&#34;&gt;Deploy a VM&lt;/h2&gt;&#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://portal.azure.com/#browse/Microsoft.Compute%2Flocations%2FcommunityGalleries%2Fimages&#34;&gt;Community Images page&lt;/a&gt; in the Azure portal and search for &amp;ldquo;kairos&amp;rdquo; in the search box. Multiple results will be returned matching multiple different regions. Click on the result matching the region you intend to use for the Virtual Machine. Find the version you want to use and click on &amp;ldquo;Create VM&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installation on Google Cloud</title>
      <link>https://kairos.io/docs/installation/gce/</link>
      <pubDate>Fri, 28 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/gce/</guid>
      <description>&lt;p&gt;This page describes how to install Kairos on Google Cloud after you have created a disk image. Since release v3.3.1, Kairos pipeline is pushing a public OS image to Google Cloud which you can use.&#xA;If you want to build a custom image, you can follow the instructions in the &lt;a href=&#34;https://kairos.io/docs/advanced/creating_custom_cloud_images/&#34;&gt;Creating Custom Cloud Images&lt;/a&gt; page.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A Google Cloud account with permissions to create VMs.&lt;/li&gt;&#xA;&lt;li&gt;A Google Cloud compatible image of Kairos. You can use the public image provided by Kairos (see below) or &lt;a href=&#34;https://kairos.io/docs/reference/auroraboot/&#34;&gt;build your own image&lt;/a&gt; and upload it to your google project (&lt;a href=&#34;https://github.com/kairos-io/kairos/blob/48d5c2bc8fc5555263f799db8a3388d7d46cd559/.github/workflows/upload-cloud-images.yaml#L36-L89&#34;&gt;check how the Kairos CI does it&lt;/a&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;deploy-a-vm&#34;&gt;Deploy a VM&lt;/h2&gt;&#xA;&lt;p&gt;Unfortunately Google Cloud &lt;a href=&#34;https://cloud.google.com/compute/docs/images/managing-access-custom-images#share-images-publicly&#34;&gt;doesn&amp;rsquo;t allow users to search among public images in different projects&lt;/a&gt;. One has to know the exact project and name of the image they intend to use, even if its publicly accessible to &lt;a href=&#34;https://cloud.google.com/compute/docs/images/managing-access-custom-images#limitations&#34;&gt;all authenticated users&lt;/a&gt;. Using the public image seems to only be possible through the command line because of the above.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automated</title>
      <link>https://kairos.io/docs/installation/automated/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/automated/</guid>
      <description>&lt;p&gt;To automate Kairos installation, you can configure a specific portion of the installation configuration file. The configuration file can then be supplied in a few different ways, such as creating an additional ISO to mount, specifying a URL, or even creating an ISO from a container image with an embedded configuration file.&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s an example of how you might customize the install block:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;install&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Device for automated installs&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;device&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/dev/sda&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Reboot after installation&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;reboot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Power off after installation&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;poweroff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Set to true to enable automated installations&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# A list of bundles&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;bundles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;quay.io/kairos/packages:k9s-utils-0.26.7&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This block allows you to specify the device on which to install Kairos, whether to reboot or power off after installation, and which bundles to include.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installing on Bare-Metal</title>
      <link>https://kairos.io/docs/installation/bare-metal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/bare-metal/</guid>
      <description>&lt;h2 id=&#34;installation-media&#34;&gt;Installation media&lt;/h2&gt;&#xA;&lt;p&gt;Download the Kairos ISO of your choice. See the &lt;a href=&#34;https://kairos.io/getting-started/&#34;&gt;Getting Started guide&lt;/a&gt; for more information.&lt;/p&gt;&#xA;&lt;p&gt;When deploying on a bare metal server, directly flash the image into a USB stick. There are multiple ways to do this:&lt;/p&gt;&#xA;&lt;h2 id=&#34;from-the-cli&#34;&gt;From the CLI&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dd &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/path/to/iso &lt;span class=&#34;nv&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/path/to/dev &lt;span class=&#34;nv&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;4MB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;from-the-gui&#34;&gt;From the GUI&lt;/h4&gt;&#xA;&lt;p&gt;For example using an application like &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;balenaEtcher&lt;/a&gt; but can be any other application which allows you to write bootable USBs.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;&#xA;&#xA;    If you&amp;rsquo;re booting in UEFI mode, make sure that your storage device where you&amp;rsquo;re planning to install Kairos, is configured as ACHI and not RAID.&#xA;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Nvidia AGX Orin</title>
      <link>https://kairos.io/docs/installation/nvidia_agx_orin/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/nvidia_agx_orin/</guid>
      <description>&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;&#xA;&#xA;    Despite the Flavor you may have selected to look into the docs. The Nvidia AGX Orin only works with Ubuntu 22.04&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;This page describes how to install Kairos on &lt;a href=&#34;https://www.nvidia.com/en-us/autonomous-machines/embedded-systems/jetson-orin/&#34;&gt;Nvidia AGX Orin&lt;/a&gt; in the eMMC.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.nvidia.com/en-us/autonomous-machines/embedded-systems/jetson-orin/&#34;&gt;Nvidia AGX Orin&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;An USB type-C cable&lt;/li&gt;&#xA;&lt;li&gt;A Linux host used to flash the Nvidia AGX Orin board&lt;/li&gt;&#xA;&lt;li&gt;Jetson linux SDK &lt;a href=&#34;https://developer.nvidia.com/embedded/jetson-linux&#34;&gt;download&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You can find debugging information here: &lt;a href=&#34;https://developer.ridgerun.com/wiki/index.php/NVIDIA_Jetson_Orin/In_Board/Getting_in_Board/Serial_Console&#34;&gt;https://developer.ridgerun.com/wiki/index.php/NVIDIA_Jetson_Orin/In_Board/Getting_in_Board/Serial_Console&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;flashing&#34;&gt;Flashing&lt;/h2&gt;&#xA;&lt;p&gt;We are going to write the partitions in the eMMC. In order to do this we will use the Nvidia SDK configured with a custom partitioning layout.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RaspberryPi</title>
      <link>https://kairos.io/docs/installation/raspberry/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/raspberry/</guid>
      <description>&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Info&lt;/h4&gt;&#xA;&#xA;    Kairos supports Raspberry Pi model 3 and 4 with 64bit architecture.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;&#xA;&#xA;    Model 5 is currently not supported because of how we use U-boot to boot the device. There&amp;rsquo;s currently some work from the people from SUSE, see &lt;a href=&#34;https://github.com/openSUSE/u-boot/pull/29&#34;&gt;https://github.com/openSUSE/u-boot/pull/29&lt;/a&gt; for more information.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;If you are not familiar with the process, it is suggested to follow the &lt;a href=&#34;https://kairos.io/getting-started/&#34;&gt;quickstart&lt;/a&gt; first to see how Kairos works.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;An SD card which size is at least 16 GB&lt;/li&gt;&#xA;&lt;li&gt;Etcher or &lt;code&gt;dd&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;A Linux host where to flash the device&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;install-using-auroraboot&#34;&gt;Install using AuroraBoot&lt;/h2&gt;&#xA;&lt;p&gt;Create &lt;code&gt;build&lt;/code&gt; directory and add &lt;code&gt;cloud-config.yaml&lt;/code&gt;, then run:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Network booting</title>
      <link>https://kairos.io/docs/installation/netboot/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/netboot/</guid>
      <description>&lt;p&gt;Most hardware these days, supports booting an operating system from the network.&#xA;The technology behind this is called &lt;a href=&#34;https://en.wikipedia.org/wiki/Preboot_Execution_Environment&#34;&gt;Preboot Execution Environment&lt;/a&gt;.&#xA;Kairos releases include artifacts to allow booting from the network. In general, the following files are needed:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The initrd image: It&amp;rsquo;s the system that loads first. It&amp;rsquo;s responsible to load the kernel.&lt;/li&gt;&#xA;&lt;li&gt;The kernel: This is the kernel of the operating system that will boot.&lt;/li&gt;&#xA;&lt;li&gt;The squashfs: The filesystem of the operating system that will boot.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Booting using these files can happen in multiple ways:&lt;/p&gt;</description>
    </item>
    <item>
      <title>P2P support</title>
      <link>https://kairos.io/docs/installation/p2p/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/p2p/</guid>
      <description>&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Network&lt;/h4&gt;&#xA;&#xA;    This feature is experimental and has only been tested on local setups. Run in production servers at your own risk.&#xA;Feedback and bug reports are welcome, as we are improving the p2p aspects of Kairos.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Deploying Kubernetes at the Edge can be a complex and time-consuming process, especially when it comes to setting up and managing multiple clusters. To make this process easier, Kairos leverages peer-to-peer technology to automatically coordinate and create Kubernetes clusters without the need of a control management interface.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Trusted Boot Installations</title>
      <link>https://kairos.io/docs/installation/trustedboot/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/trustedboot/</guid>
      <description>&lt;p&gt;&amp;ldquo;Trusted Boot&amp;rdquo; is a combination of technologies that allows us to guarantee that a system was not tampered with, and the user-data is protected by cold attacks, it is composed by FDE, Secure Boot and Measured Boot.&lt;/p&gt;&#xA;&lt;p&gt;If you want to learn more on what Trusted Boot is and how it works, see the &lt;a href=&#34;https://kairos.io/docs/architecture/trustedboot/&#34;&gt;Trusted Boot Architecture&lt;/a&gt; page. This page describes how to enable Trusted Boot support in Kairos.&lt;/p&gt;&#xA;&lt;p&gt;Kairos supports Trusted boot by generating specific installable medium. This feature is optional and works alongside how Kairos works.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Takeover</title>
      <link>https://kairos.io/docs/installation/takeover/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/installation/takeover/</guid>
      <description>&lt;p&gt;Kairos supports takeover installations. Here are a few summarized steps:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;From the dedicated control panel (OVH, Hetzner, etc.), boot in &lt;em&gt;rescue&lt;/em&gt; mode&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/debian/&#34;&gt;Install docker&lt;/a&gt; and run for example:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;DEVICE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/sda&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;IMAGE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;quay.io/kairos/@flavor:@flavorRelease-core-amd64-generic-master&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;&amp;#39;EOF&amp;#39; &amp;gt; config.yaml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;#cloud-config&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;users:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;- name: &amp;#34;kairos&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  passwd: &amp;#34;kairos&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  groups:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    - admin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  ssh_authorized_keys:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  - github:mudler&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;CONFIG_FILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;config.yaml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run --privileged -v &lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;:/data -v /dev:/dev -ti &lt;span class=&#34;nv&#34;&gt;$IMAGE&lt;/span&gt; kairos-agent manual-install --device &lt;span class=&#34;nv&#34;&gt;$DEVICE&lt;/span&gt; --source dir:/ /data/&lt;span class=&#34;nv&#34;&gt;$CONFIG_FILE&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;&#xA;&#xA;    &lt;code&gt;--source&lt;/code&gt; flag refers to the source of installation. If you want to install from the pulled docker image you can set the &lt;code&gt;--source&lt;/code&gt; flag to &lt;code&gt;dir:/&lt;/code&gt; to use the root dir of the image as install source. Otherwise you can point it to an oci image with the &lt;code&gt;oci:&lt;/code&gt; prefix.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Switch back to &lt;em&gt;booting&lt;/em&gt; from HD and reboot.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
