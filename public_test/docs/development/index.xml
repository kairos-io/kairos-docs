<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Kairos</title>
    <link>https://kairos.io/docs/development/</link>
    <description>Recent content in Development on Kairos</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://kairos.io/docs/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Development notes</title>
      <link>https://kairos.io/docs/development/development/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/development/development/</guid>
      <description>&lt;p&gt;Here you can find development notes intended for maintainers and guidance for new contributors.&lt;/p&gt;&#xA;&lt;h2 id=&#34;repository-structure&#34;&gt;Repository structure&lt;/h2&gt;&#xA;&lt;p&gt;Kairos uses Docker as its primary build system, allowing you to build Kairos images seamlessly in any environmentâ€”there is no need for a top-level Makefile. However, individual components within Kairos may use their own build systems or Makefiles as needed.&lt;/p&gt;&#xA;&lt;p&gt;The main Kairos build process is managed by &lt;a href=&#34;https://github.com/kairos-io/kairos-init&#34;&gt;kairos-init&lt;/a&gt;, a tool that transforms a typical (non-immutable) OS image into a Kairos image. Within kairos-init, you&amp;rsquo;ll find all the essential building blocks that make up a Kairos system, such as &lt;a href=&#34;https://github.com/kairos-io/immucore&#34;&gt;immucore&lt;/a&gt;, the &lt;a href=&#34;https://github.com/kairos-io/kairos-agent&#34;&gt;kairos-agent&lt;/a&gt;, and more. Each of these components is included at a specific, pinned version, since they are developed and released on their own schedule. The combination of these pinned versions is what defines a particular Kairos release.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Debugging station</title>
      <link>https://kairos.io/docs/development/debugging-station/</link>
      <pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/development/debugging-station/</guid>
      <description>&lt;p&gt;When developing or troubleshooting Kairos, it can be useful to share a local cluster with another peer. This section illustrates how to use &lt;a href=&#34;https://kairos.io/docs/reference/entangle/&#34;&gt;Entangle&lt;/a&gt; to achieve that. We call this setup &lt;em&gt;debugging-station&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;&#xA;&#xA;    This section describes the configuration step by step. If you are in a hurry, you can skip this section and directly go to &lt;strong&gt;Deploy with AuroraBoot&lt;/strong&gt;.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;When deploying a new cluster, we can use &lt;a href=&#34;https://kairos.io/docs/advanced/bundles/&#34;&gt;Bundles&lt;/a&gt; to install the &lt;code&gt;entangle&lt;/code&gt; and &lt;code&gt;cert-manager&lt;/code&gt; chart automatically. We specify the bundles in the cloud config file as shown below:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Booting Kairos on Nvidia Jetson ARM</title>
      <link>https://kairos.io/docs/development/nvidia/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://kairos.io/docs/development/nvidia/</guid>
      <description>&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;&#xA;&#xA;    Despite the Flavor you may have selected to look into the docs. The Nvidia AGX Orin only works with Ubuntu 20.04&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;&#xA;&#xA;    Please note that the following page contains only development reference. At the time of writing, we have tried porting Kairos to Jetson Nano eMMC without success. This is due to the old kernel supported (4.9), not properly working with &lt;code&gt;EFISTUB&lt;/code&gt; and &lt;code&gt;U-boot&lt;/code&gt; (you can see the &lt;a href=&#34;https://github.com/kairos-io/kairos/issues/45&#34;&gt;issue here&lt;/a&gt;). However, the steps outlined &lt;em&gt;should&lt;/em&gt; be a good reference to port Kairos to those architecture &lt;em&gt;when&lt;/em&gt; a new kernel version is available. We have tested, and have successfully booted a Jetson Nano with the 5.15 kernel, however, due to the lack of driver support, eMMC partitions are not properly recognized.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;This page is a development reference in order to boot Kairos in Nvidia Jetson devices. Nvidia Jetson images by default ship &lt;code&gt;extlinux&lt;/code&gt; as bootloader, without EFI boot. This guide explains how to get instead u-boot to chainload to &lt;code&gt;grub2&lt;/code&gt;, which can be used to boot and load &lt;code&gt;Kairos&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
